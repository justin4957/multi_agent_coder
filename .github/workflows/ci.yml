name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  MIX_ENV: test
  ELIXIR_VERSION: "1.18"
  OTP_VERSION: "26"

jobs:
  test:
    name: Test (Elixir ${{matrix.elixir}} / OTP ${{matrix.otp}})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: ["1.18"]
        otp: ["26"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-

      - name: Install dependencies
        run: mix deps.get

      - name: Compile code
        run: mix compile

      - name: Check formatting
        run: mix format --check-formatted

      - name: Run tests
        run: mix test --trace

      - name: Run tests with coverage
        run: mix coveralls.json

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./cover/excoveralls.json
          fail_ci_if_error: false

  quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-quality-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-quality-

      - name: Install dependencies
        run: mix deps.get

      - name: Compile for quality checks
        run: MIX_ENV=dev mix compile

      - name: Check for unused dependencies
        run: |
          # Run the check and capture output
          # Allow optional Iris dependencies to be "unused" in CI where Iris path doesn't exist
          if mix deps.unlock --check-unused 2>&1 | tee /tmp/deps_check.txt; then
            echo "✓ No unused dependencies"
          else
            # Check if failures are only Iris-related dependencies
            if grep -qE "broadway|nebulex|telemetry_poller|websockex|yaml_elixir|yamerl|gen_stage|nimble_options" /tmp/deps_check.txt; then
              echo "⚠️  Iris-related optional dependencies detected (expected in CI)"
              echo "Checking for non-Iris unused dependencies..."

              # Extract non-Iris dependencies from the output
              if grep -v -E "broadway|nebulex|telemetry_poller|websockex|yaml_elixir|yamerl|gen_stage|nimble_options|shards|decorator" /tmp/deps_check.txt | grep -q "Unused"; then
                echo "❌ Found unused dependencies that are not Iris-related"
                exit 1
              else
                echo "✓ Only Iris optional dependencies are unused (acceptable)"
                exit 0
              fi
            else
              echo "❌ Unused dependencies check failed"
              exit 1
            fi
          fi

      - name: Run Credo (code quality)
        run: mix credo || true
        continue-on-error: false

  build:
    name: Build Escript
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-build-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-build-

      - name: Install dependencies
        run: mix deps.get

      - name: Build escript
        run: mix escript.build

      - name: Verify escript exists
        run: test -f multi_agent_coder

      - name: Upload escript artifact
        uses: actions/upload-artifact@v4
        with:
          name: multi_agent_coder-escript
          path: multi_agent_coder
          retention-days: 7
